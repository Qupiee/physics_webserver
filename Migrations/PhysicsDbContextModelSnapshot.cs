// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using physics_webserver.Models;

#nullable disable

namespace physics_webserver.Migrations
{
    [DbContext(typeof(PhysicsDbContext))]
    partial class PhysicsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("physics_webserver.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdminFullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("AdminId")
                        .HasName("PK_AdminKey");

                    b.ToTable("_Admin", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerCorrect")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AnswerStudent")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("AnswerStudentId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerTaskId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("AnswerId")
                        .HasName("PK_AnswerKey");

                    b.HasIndex("AnswerStudentId");

                    b.HasIndex("AnswerTaskId");

                    b.ToTable("_Answers", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int?>("GroupLabel")
                        .HasColumnType("int");

                    b.Property<int?>("GroupStudentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId")
                        .HasName("PK_GroupKey");

                    b.HasIndex("GroupStudentId");

                    b.ToTable("_Group", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageUserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId")
                        .HasName("PK_MessageKey");

                    b.HasIndex("MessageUserId");

                    b.ToTable("_Message", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StudentFullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("StudentGroup")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("StudentId")
                        .HasName("PK_StudentKey");

                    b.ToTable("_Student", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("TaskTeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TaskText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskTheoryId")
                        .HasColumnType("int");

                    b.HasKey("TaskId")
                        .HasName("PK_TaskKey");

                    b.HasIndex("TaskTeacherId");

                    b.HasIndex("TaskTheoryId");

                    b.ToTable("_Task", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TeacherFullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("TeacherId")
                        .HasName("PK_TeacherKey");

                    b.ToTable("_Teacher", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Theory", b =>
                {
                    b.Property<int>("TheoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheoryId"));

                    b.Property<string>("TheorySection")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TheoryText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheoryTheme")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("TheoryId")
                        .HasName("PK_TheoryKey");

                    b.ToTable("_Theory", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserLogin")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId")
                        .HasName("PK_UserKey");

                    b.ToTable("_User", (string)null);
                });

            modelBuilder.Entity("physics_webserver.Models.Admin", b =>
                {
                    b.HasOne("physics_webserver.Models.User", "AdminNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("physics_webserver.Models.Admin", "AdminId")
                        .IsRequired()
                        .HasConstraintName("FK_AdminUserKey");

                    b.Navigation("AdminNavigation");
                });

            modelBuilder.Entity("physics_webserver.Models.Answer", b =>
                {
                    b.HasOne("physics_webserver.Models.Student", "AnswerStudentNavigation")
                        .WithMany("Answers")
                        .HasForeignKey("AnswerStudentId")
                        .HasConstraintName("FK_AnswerStudentKey");

                    b.HasOne("physics_webserver.Models.Task", "AnswerTask")
                        .WithMany("Answers")
                        .HasForeignKey("AnswerTaskId")
                        .HasConstraintName("FK_AnswerTaskKey");

                    b.Navigation("AnswerStudentNavigation");

                    b.Navigation("AnswerTask");
                });

            modelBuilder.Entity("physics_webserver.Models.Group", b =>
                {
                    b.HasOne("physics_webserver.Models.Student", "GroupStudent")
                        .WithMany("Groups")
                        .HasForeignKey("GroupStudentId")
                        .HasConstraintName("FK_GroupStudentKey");

                    b.Navigation("GroupStudent");
                });

            modelBuilder.Entity("physics_webserver.Models.Message", b =>
                {
                    b.HasOne("physics_webserver.Models.User", "MessageUser")
                        .WithMany("Messages")
                        .HasForeignKey("MessageUserId")
                        .HasConstraintName("FK_MessageUserKey");

                    b.Navigation("MessageUser");
                });

            modelBuilder.Entity("physics_webserver.Models.Student", b =>
                {
                    b.HasOne("physics_webserver.Models.User", "StudentNavigation")
                        .WithOne("Student")
                        .HasForeignKey("physics_webserver.Models.Student", "StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentUserKey");

                    b.Navigation("StudentNavigation");
                });

            modelBuilder.Entity("physics_webserver.Models.Task", b =>
                {
                    b.HasOne("physics_webserver.Models.Teacher", "TaskTeacher")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskTeacherId")
                        .HasConstraintName("FK_TaskTeacherKey");

                    b.HasOne("physics_webserver.Models.Theory", "TaskTheory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskTheoryId")
                        .HasConstraintName("FK_TaskTheoryKey");

                    b.Navigation("TaskTeacher");

                    b.Navigation("TaskTheory");
                });

            modelBuilder.Entity("physics_webserver.Models.Teacher", b =>
                {
                    b.HasOne("physics_webserver.Models.User", "TeacherNavigation")
                        .WithOne("Teacher")
                        .HasForeignKey("physics_webserver.Models.Teacher", "TeacherId")
                        .IsRequired()
                        .HasConstraintName("FK_TeacherUserKey");

                    b.Navigation("TeacherNavigation");
                });

            modelBuilder.Entity("physics_webserver.Models.Student", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("physics_webserver.Models.Task", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("physics_webserver.Models.Teacher", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("physics_webserver.Models.Theory", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("physics_webserver.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Messages");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
